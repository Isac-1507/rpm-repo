name: Build and Publish Jellyfin FFmpeg RPMs

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    container: fedora:latest

    strategy:
      matrix:
        fedora_version: [42, 43]

    steps:
      - name: Install build tools
        run: |
          dnf -y install rpmdevtools createrepo_c git wget curl make
          
      - name: Enable RPM Fusion Free and Nonfree
        run: |
          FEDORA_VERSION=${{ matrix.fedora_version }}
          curl -O https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-${FEDORA_VERSION}.noarch.rpm
          curl -O https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-${FEDORA_VERSION}.noarch.rpm
          rpm -i --nodeps rpmfusion-free-release-${FEDORA_VERSION}.noarch.rpm
          rpm -i --nodeps rpmfusion-nonfree-release-${FEDORA_VERSION}.noarch.rpm
          
      - name: Clone upstream spec repo
        run: |
          git clone https://github.com/chenxiaolong/jellyfin-ffmpeg-fedora.git upstream

      - name: Prepare RPM build tree
        run: |
          mkdir -p /github/home/rpmbuild/{BUILD,RPMS,SOURCES,SPECS,SRPMS}
          cp upstream/jellyfin-ffmpeg.spec /github/home/rpmbuild/SPECS/

      - name: Download sources from spec
        run: |
          cd /github/home/rpmbuild/SPECS
          spectool -g jellyfin-ffmpeg.spec
          mv *.tar.gz /github/home/rpmbuild/SOURCES/
          dnf update --refresh -y
      - name: Install build dependencies (skip unavailable)
        run: |
          dnf -y install \
            clang nasm vulkan-loader-devel lame-devel \
            libdrm-devel libva-devel libva-drm-devel libva-x11-devel \
            libwebp-devel libxml2-devel freetype-devel fontconfig-devel \
            fribidi-devel harfbuzz-devel libass-devel libbluray-devel \
            libchromaprint-devel libopenmpt-devel libplacebo-devel \
            libvpx-devel libvorbis-devel theora-devel opus-devel \
            zvbi-devel zlib-devel shaderc-devel dav1d-devel \
            libzimg-devel libtheora-devel libvpl-devel \
            opencl-headers opencl-utils-devel \
            x264-devel x265-devel fdk-aac-devel ffmpeg-devel \
            ffnvcodec-devel SvtAv1Enc-devel \
            pkgconf-pkg-config \
            --skip-unavailable

      - name: Log missing packages
        run: |
          for pkg in libva-drm-devel libva-x11-devel theora-devel shaderc-devel dav1d-devel \
                     libzimg-devel opencl-utils-devel fdk-aac-devel ffnvcodec-devel SvtAv1Enc-devel; do
            dnf repoquery --whatprovides "$pkg" || echo "Missing: $pkg"
          done

      - name: Build RPM
        run: |
          cd /github/home/rpmbuild/SPECS
          rpmbuild -bb jellyfin-ffmpeg.spec --define "_topdir /github/home/rpmbuild"

      - name: Copy RPMs to repo folder
        run: |
          mkdir -p repo/fedora/${{ matrix.fedora_version }}/x86_64
          cp /github/home/rpmbuild/RPMS/x86_64/*.rpm repo/fedora/${{ matrix.fedora_version }}/x86_64/
          createrepo_c repo/fedora/${{ matrix.fedora_version }}/x86_64

      - name: Upload RPM repo as artifact
        uses: actions/upload-artifact@v4
        with:
          name: jellyfin-ffmpeg-repo-${{ matrix.fedora_version }}
          path: repo/fedora/${{ matrix.fedora_version }}/x86_64

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Download all RPM repo artifacts
        uses: actions/download-artifact@v4
        with:
          path: repo

      - name: Push to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: repo
          publish_branch: gh-pages
